package com.example.quickrent

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.*
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.lifecycleScope
import com.example.quickrent.network.RetrofitClient
import com.example.quickrent.network.model.LoginRequest
import kotlinx.coroutines.launch

class LoginActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_login)

        val emailField = findViewById<EditText>(R.id.emailField)
        val passwordField = findViewById<EditText>(R.id.passwordField)
        val loginButton = findViewById<Button>(R.id.loginButton)
        val registerLink = findViewById<TextView>(R.id.registerLink)
        val forgotPasswordLink = findViewById<TextView>(R.id.forgotPasswordLink)

        // üìå –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        registerLink.setOnClickListener {
            startActivity(Intent(this, RegisterActivity::class.java))
        }

        // üìå –õ–æ–≥–∏–Ω —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä (Retrofit)
        loginButton.setOnClickListener {
            val email = emailField.text.toString()
            val password = passwordField.text.toString()

            Log.d("LoginActivity", "–û—Ç–ø—Ä–∞–≤–ª—è—é: Email=$email, Password=$password")

            if (email.isNotEmpty() && password.isNotEmpty()) {
                login(email, password)  // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Retrofit, –∞ –Ω–µ Firebase
            } else {
                Log.e("LoginActivity", "–ü–æ–ª—è email –∏–ª–∏ –ø–∞—Ä–æ–ª—å –ø—É—Å—Ç—ã–µ!")
                Toast.makeText(this, "–í–≤–µ–¥–∏—Ç–µ email –∏ –ø–∞—Ä–æ–ª—å", Toast.LENGTH_SHORT).show()
            }
        }

        // üìå –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
        forgotPasswordLink.setOnClickListener {
            val intent = Intent(this, ForgotPasswordActivity::class.java)
            intent.putExtra("email", emailField.text.toString())
            startActivity(intent)
        }
    }

    private fun login(email: String, password: String) {
        lifecycleScope.launch {
            try {
                val response = RetrofitClient.api.login(LoginRequest(email, password))

                Log.d("LoginActivity", "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.code()} - ${response.body()}")

                if (response.isSuccessful && response.body() != null) {
                    val responseBody = response.body()!!
                    val token = response.body()!!.token
                    val userId = responseBody.user.id  // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞

                    Toast.makeText(this@LoginActivity, "–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!", Toast.LENGTH_SHORT).show()

                    Log.d("LoginActivity", "–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω: $token")
                    Log.d("LoginActivity", "–ü–æ–ª—É—á–µ–Ω–Ω—ã–π userId: $userId")

                    // ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ userId –≤ SharedPreferences
                    val sharedPreferences = getSharedPreferences("QuickRentPrefs", MODE_PRIVATE)
                    sharedPreferences.edit().apply {
                        putString("auth_token", token)
                        putLong("user_id", userId)  // –°–æ—Ö—Ä–∞–Ω—è–µ–º user_id
                        apply()
                    }
                    Log.d("Auth", "Token and userId saved: $token, $userId")

                    // ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –≤ MainActivity
                    startActivity(Intent(this@LoginActivity, MainActivity::class.java))
                    finish()
                } else {
                    Log.e("LoginActivity", "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${response.errorBody()?.string()}")
                    Toast.makeText(this@LoginActivity, "–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞", Toast.LENGTH_SHORT).show()
                }
            } catch (e: Exception) {
                Log.e("LoginActivity", "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${e.message}")
                Toast.makeText(this@LoginActivity, "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", Toast.LENGTH_SHORT).show()
            }
        }
    }



}
